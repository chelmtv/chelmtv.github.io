import { BuildOptions, Caption, ConvertOptions, ParseOptions, ResyncOptions } from "./types/handler.js";
import { ResyncFunction, SubsrtInterface } from "./types/subsrt.js";
declare class Subsrt implements SubsrtInterface {
    format: import("./types/subsrt.js").SubsrtFormats;
    /**
     * Gets a list of supported subtitle formats.
     */
    list: () => string[];
    /**
     * Detects a subtitle format from the content.
     */
    detect: (content: string) => string;
    /**
     * Parses a subtitle content.
     */
    parse: (content: string, options?: ParseOptions) => Caption[];
    /**
     * Builds a subtitle content.
     */
    build: (captions: Caption[], options?: BuildOptions) => string;
    /**
     * Converts subtitle format.
     */
    convert: (content: string, _options?: ConvertOptions | string) => string;
    /**
     * Shifts the time of the captions.
     */
    resync: (captions: Caption[], options?: ResyncFunction | number | ResyncOptions) => Caption[];
}
declare const subsrt: Subsrt;
export default subsrt;
export declare const format: import("./types/subsrt.js").SubsrtFormats, list: () => string[], detect: (content: string) => string, parse: (content: string, options?: ParseOptions) => Caption[], build: (captions: Caption[], options?: BuildOptions) => string, convert: (content: string, _options?: ConvertOptions | string) => string, resync: (captions: Caption[], options?: ResyncFunction | number | ResyncOptions) => Caption[];
