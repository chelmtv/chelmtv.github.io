{
  "version": 3,
  "sources": ["../../core-js/internals/entry-virtual.js", "../../core-js/modules/es.array.to-sorted.js"],
  "sourcesContent": ["var global = require('../internals/global');\n\nmodule.exports = function (CONSTRUCTOR) {\n  return global[CONSTRUCTOR].prototype;\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\nvar getVirtual = require('../internals/entry-virtual');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar $Array = Array;\nvar sort = uncurryThis(getVirtual('Array').sort);\n\n// `Array.prototype.toSorted` method\n// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.toSorted\n$({ target: 'Array', proto: true }, {\n  toSorted: function toSorted(compareFn) {\n    if (compareFn !== undefined) aCallable(compareFn);\n    var O = toIndexedObject(this);\n    var A = arrayFromConstructorAndList($Array, O);\n    return sort(A, compareFn);\n  }\n});\n\naddToUnscopables('toSorted');\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,QAAI,SAAS;AAEb,WAAO,UAAU,SAAU,aAAa;AACtC,aAAO,OAAO,WAAW,EAAE;AAAA,IAC7B;AAAA;AAAA;;;ACJA;AAAA;AACA,QAAI,IAAI;AACR,QAAI,cAAc;AAClB,QAAI,YAAY;AAChB,QAAI,kBAAkB;AACtB,QAAI,8BAA8B;AAClC,QAAI,aAAa;AACjB,QAAI,mBAAmB;AAEvB,QAAI,SAAS;AACb,QAAI,OAAO,YAAY,WAAW,OAAO,EAAE,IAAI;AAI/C,MAAE,EAAE,QAAQ,SAAS,OAAO,KAAK,GAAG;AAAA,MAClC,UAAU,SAAS,SAAS,WAAW;AACrC,YAAI,cAAc;AAAW,oBAAU,SAAS;AAChD,YAAI,IAAI,gBAAgB,IAAI;AAC5B,YAAI,IAAI,4BAA4B,QAAQ,CAAC;AAC7C,eAAO,KAAK,GAAG,SAAS;AAAA,MAC1B;AAAA,IACF,CAAC;AAED,qBAAiB,UAAU;AAAA;AAAA;",
  "names": []
}
