import {
  require_array_from_constructor_and_list
} from "./chunk-AFA6TGXH.js";
import {
  require_add_to_unscopables
} from "./chunk-TYSKS5M3.js";
import {
  require_export,
  require_to_indexed_object
} from "./chunk-G6PODNB4.js";
import {
  require_a_callable,
  require_function_uncurry_this,
  require_global
} from "./chunk-U3I62X7R.js";
import {
  __commonJS
} from "./chunk-WQG2LZMB.js";

// node_modules/core-js/internals/entry-virtual.js
var require_entry_virtual = __commonJS({
  "node_modules/core-js/internals/entry-virtual.js"(exports, module) {
    var global = require_global();
    module.exports = function(CONSTRUCTOR) {
      return global[CONSTRUCTOR].prototype;
    };
  }
});

// node_modules/core-js/modules/es.array.to-sorted.js
var require_es_array_to_sorted = __commonJS({
  "node_modules/core-js/modules/es.array.to-sorted.js"() {
    var $ = require_export();
    var uncurryThis = require_function_uncurry_this();
    var aCallable = require_a_callable();
    var toIndexedObject = require_to_indexed_object();
    var arrayFromConstructorAndList = require_array_from_constructor_and_list();
    var getVirtual = require_entry_virtual();
    var addToUnscopables = require_add_to_unscopables();
    var $Array = Array;
    var sort = uncurryThis(getVirtual("Array").sort);
    $({ target: "Array", proto: true }, {
      toSorted: function toSorted(compareFn) {
        if (compareFn !== void 0)
          aCallable(compareFn);
        var O = toIndexedObject(this);
        var A = arrayFromConstructorAndList($Array, O);
        return sort(A, compareFn);
      }
    });
    addToUnscopables("toSorted");
  }
});

export {
  require_es_array_to_sorted
};
//# sourceMappingURL=chunk-AOODQ74O.js.map
